{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RP-MSI\\\\Documents\\\\React\\\\newsWebsite\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Agencies from './Agencies';\nimport News from './News';\nimport { Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      news: [],\n      newsByAgency: [],\n      currentAgency: \"\",\n      lastKey: 0\n    };\n    this.filterNewsByAgency = (newsList, agencyName) => {\n      const filteredNewsList = newsList.filter(item => item.source === agencyName);\n      this.setState({\n        newsByAgency: filteredNewsList\n      });\n      console.log(agencyName + \"calisti\");\n    };\n    this.getNews = () => {\n      fetch(\"https://api.collectapi.com/news/getNews?country=tr&tag=general\", {\n        headers: {\n          \"content-type\": \"application/json\",\n          \"authorization\": \"apikey 4OtP6sIsRfDnGinUUSfZTG:78vbunVFClZG4HVB2HedTB\"\n        }\n      }).then(response => response.json()).then(data => {\n        const existingList = this.state.news;\n        const listToAdd = data.result;\n        for (let i = 0; i < listToAdd.length; i++) {\n          listToAdd[i].key = lastKey + 1;\n          this.setState({\n            lastKey: listToAdd[i].key\n          });\n          existingList.push(listToAdd[i]);\n        }\n        this.setState({\n          news: existingList\n        });\n      });\n    };\n    this.changeAgency = agency => {\n      this.setState({\n        currentAgency: agency\n      });\n      this.getNews();\n      this.filterNewsByAgency(this.state.news, agency);\n    };\n  }\n  componentDidMount() {\n    this.getNews();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Agencies, {\n            changeAgency: this.changeAgency,\n            currentAgency: this.state.currentAgency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"9\",\n          children: /*#__PURE__*/_jsxDEV(News, {\n            newsByAgency: this.state.newsByAgency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Container","Row","Col","Agencies","News","Route","Routes","jsxDEV","_jsxDEV","App","constructor","arguments","state","news","newsByAgency","currentAgency","lastKey","filterNewsByAgency","newsList","agencyName","filteredNewsList","filter","item","source","setState","console","log","getNews","fetch","headers","then","response","json","data","existingList","listToAdd","result","i","length","key","push","changeAgency","agency","componentDidMount","render","children","xs","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/RP-MSI/Documents/React/newsWebsite/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Agencies from './Agencies';\nimport News from './News';\nimport {Route, Routes} from 'react-router-dom'\n\nexport default class App extends Component {\n  state = {\n    news: [],\n    newsByAgency: [],\n    currentAgency: \"\",\n    lastKey: 0\n  };\n\n  filterNewsByAgency = (newsList, agencyName) => {\n    const filteredNewsList = newsList.filter((item) => item.source === agencyName);\n    this.setState({newsByAgency : filteredNewsList})\n    console.log(agencyName + \"calisti\");\n   } \n\n\n  componentDidMount() {\n    this.getNews();\n  }\n\n  getNews = () => {\n\n    fetch(\"https://api.collectapi.com/news/getNews?country=tr&tag=general\", {\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"apikey 4OtP6sIsRfDnGinUUSfZTG:78vbunVFClZG4HVB2HedTB\"\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const existingList = this.state.news;\n        const listToAdd = data.result;\n        for (let i = 0; i < listToAdd.length; i++) {\n          listToAdd[i].key = lastKey + 1;\n          this.setState({lastKey : listToAdd[i].key})\n          existingList.push(listToAdd[i]);\n        }\n        this.setState({ news : existingList });\n    });\n  };\n\n      \n\n  changeAgency = (agency) => {\n    this.setState({ currentAgency: agency });\n    this.getNews();\n    this.filterNewsByAgency(this.state.news, agency)\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"3\">\n            <Agencies\n              changeAgency={this.changeAgency}\n              currentAgency={this.state.currentAgency}\n            />\n          </Col>\n          <Col xs=\"9\">\n            \n            <News\n              newsByAgency={this.state.newsByAgency}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}